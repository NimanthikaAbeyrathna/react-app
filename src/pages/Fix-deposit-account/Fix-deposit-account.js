import React, { useState } from 'react';
import './Fix-deposit-account.css';
import Navigation from "../../components/Navigation/Navigation";
import {Link} from "react-router-dom";
import axios from "axios";

export default function FixDepositAccount() {

    const [depositAmount, setDepositAmount] = useState('');
    const [maturityDateIs, setMaturityDateIs] = useState('');
    const [interestRate, setInterestRate] = useState('');
    const [accountId, setAccountId] = useState('');

    const [accountNumber, setAccountNumber] = useState('');
    const [maturityDate, setMaturityDate] = useState('');
    const [interestEarned, setInterestEarned] = useState('');

    const fixDepositAccountCreation = async (event) => {
        event.preventDefault();

        const javascriptDate = new Date();
        const year = javascriptDate.getFullYear();
        const month = String(javascriptDate.getMonth() + 1).padStart(2, '0');
        const day = String(javascriptDate.getDate()).padStart(2, '0');
        const formattedDate = `${year}-${month}-${day}`;

        const fixDepositAccount = {
            depositAmount: depositAmount,
            createDate: formattedDate,
            maturityDate: maturityDateIs,
            interestRate: interestRate,
            accountId: accountId,
        };

        try {
            const response = await axios.post(`${process.env.REACT_APP_API_URL}/fixdepositaccount`, fixDepositAccount);
            alert(`Successfully created, and kindly remember this one-time autogenerated Fix Deposit Account ID for future interactions. Your Fix Deposit account id is: ${response.data}`);
            setDepositAmount('');
            setMaturityDate('');
            setInterestRate('');
            setAccountId('');



        } catch (error) {
            console.error(error);
        }
    };

    const getFixDepositDetails = async (event) => {
        event.preventDefault();

        try {
            const response = await axios.get(`${process.env.REACT_APP_API_URL}/fixdepositaccount/${accountNumber}`);
            if (response.data === null) {
                alert('Please insert correct account number');
            } else {
                setMaturityDate(response.data.maturityDate);
                setInterestEarned(response.data.interestEarned !== null ? response.data.interestEarned : 0);
            }
        } catch (error) {
            console.error(error);
        }
    };



    return (
        <div className='container-fluid'>
            <div className='row'>
                <header className='d-flex justify-content-between align-items-center p-1'>
                    <h1 className='text-white'>Fix Deposit Account</h1>
                    <button id='logOutBtn' className='btn btn-danger'><Link className='text-black text-decoration-none' to="/">Log out</Link></button>
                </header>
                <Navigation/>
                <div className="col-md-10">

                    <div id="containerWrap" className="d-flex justify-content-center">
                        <div className="container">
                            <h2>Fix Deposit Account Creation</h2>
                            <form onSubmit={fixDepositAccountCreation}>
                                <label htmlFor="depositAmount">Deposit Amount</label>
                                <input
                                    type="number"
                                    id="depositAmount"
                                    value={depositAmount}
                                    onChange={(e) => setDepositAmount(e.target.value)}
                                    required
                                    step="0.00"
                                />
                                <br />
                                <label htmlFor="maturityDateIs">Maturity Date:</label>
                                <input
                                    type="date"
                                    id="maturityDateIs"
                                    value={maturityDateIs}
                                    onChange={(e) => setMaturityDateIs(e.target.value)}
                                    required
                                />
                                <br />
                                <label htmlFor="interestRate">Interest Rate:</label>
                                <input
                                    type="number"
                                    id="interestRate"
                                    value={interestRate}
                                    onChange={(e) => setInterestRate(e.target.value)}
                                    required
                                    step="0.00"
                                />
                                <br />
                                <label htmlFor="accountId">Account Id:</label>
                                <input
                                    type="number"
                                    id="accountId"
                                    value={accountId}
                                    onChange={(e) => setAccountId(e.target.value)}
                                    required
                                />
                                <br />
                                <button type="submit">Create</button>
                            </form>
                        </div>

                        <div className="container2">
                            <form onSubmit={getFixDepositDetails}>
                                <h2>Fixed Deposit Details</h2>
                                <label htmlFor="accountNumber">Account Number:</label>
                                <div id='wrap'>
                                <input
                                    type="number"
                                    id="accountNumber"
                                    value={accountNumber}
                                    onChange={(e) => setAccountNumber(e.target.value)}
                                />
                                <button type="submit">Search</button>
                                </div>
                                <br />
                                <label htmlFor="maturityDate">Maturity Date:</label>
                                <input
                                    type="date"
                                    id="maturityDate"
                                    value={maturityDate}
                                    disabled
                                />
                                <br />
                                <label htmlFor="interestEarned">Interest Earned:</label>
                                <input
                                    type="number"
                                    id="interestEarned"
                                    value={interestEarned}
                                    disabled
                                    step="0.00"
                                />
                            </form>
                        </div>
                    </div>


                </div>

            </div>

        </div>
    );
}


